name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Clonar el repositorio
        uses: actions/checkout@v3

      - name: Configurar JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Ejecutar pruebas
        run: sudo chmod 777 test.sh && ./test.sh

      - name: Construir la imagen Docker
        run: docker build -t gilgamesh06/task:${{ github.run_number }} .

      - name: Login en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Etiquetar como latest
        run: docker tag gilgamesh06/task:${{ github.run_number }} gilgamesh06/task:latest

      - name: Push de imágenes
        run: |
          docker push gilgamesh06/task:${{ github.run_number }}
          docker push gilgamesh06/task:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps: 
      - name: Cargar clave SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_PRIVATE_KEY }}

      - name: Añadir servidor a known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Descargar docker-compose.yml (sparse-checkout)
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            rm -rf task
            mkdir task && cd task
            git init
            git remote add origin https://github.com/Gilgamesh06/TaskApp.git
            git config core.sparseCheckout true
            echo "docker-compose.yml" > .git/info/sparse-checkout
            git pull origin main
          EOF

      - name: Login en Docker Hub (para pull de imagen)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Desplegar usando docker-compose (EC2 u otra máquina)
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            sudo apt update 
            sudo apt install -y openjdk-21-jdk
            sudo apt install -y docker.io && sudo apt install -y docker-compose-v2 
            sudo chmod 777 /var/run/docker.sock
            cd task
            docker compose down --volumes --remove-orphans || true
            docker pull gilgamesh06/task:latest
            docker compose up -d
            exit
          EOF

